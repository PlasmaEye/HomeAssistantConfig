- id: outdoor_lights_on_when_dark
  alias: Outdoor Lights On When Dark
  trigger:
  - below: '-4'
    entity_id: sun.sun
    platform: numeric_state
    value_template: '{{ state.attributes.elevation }}'
  action:
  - entity_id: switch.front_door_south_switch,switch.garage_sconces_switch
    service: switch.turn_on
  mode: single
- id: porch_light_off_at_11
  alias: Porch Lights Off At 11
  trigger:
  - at: '23:00:00'
    platform: time
  action:
  - entity_id: switch.front_door_south_switch,switch.back_porch_lights
    service: switch.turn_off
  mode: single
- id: outdoor_lights_off_when_light_and_cloudy
  alias: Outdoor Lights Off When Light and Cloudy
  trigger:
    platform: numeric_state
    entity_id: sun.sun
    value_template: '{{ state.attributes.elevation }}'
    above: -4.0
  condition:
  - condition: numeric_state
    entity_id: sensor.dark_sky_cloud_cover
    below: 80
  action:
    service: switch.turn_off
    entity_id:
    - switch.front_door_south_switch
    - switch.garage_sconces_switch
- id: outdoor_lights_off_when_light
  alias: Outdoor Lights Off When Light
  trigger:
    platform: numeric_state
    entity_id: sun.sun
    value_template: '{{ state.attributes.elevation }}'
    above: 0
  action:
    service: switch.turn_off
    entity_id:
    - switch.front_door_south_switch
    - switch.garage_sconces_switch
- id: dim_theater_lights_for_movies
  alias: Dim theater lights for movies
  trigger:
  - platform: template
    value_template: '{{ is_state_attr(''media_player.home_theater_tv'', ''source'',
      ''Plex'') }}'
  - platform: template
    value_template: '{{ is_state_attr(''media_player.home_theater_tv'', ''source'',
      ''Amazon Prime Video'') }}'
  - platform: template
    value_template: '{{ is_state_attr(''media_player.home_theater_tv'', ''source'',
      ''Netflix'') }}'
  - platform: template
    value_template: '{{ is_state_attr(''media_player.home_theater_tv'', ''source'',
      ''Google Play Movies & TV'') }}'
  - platform: template
    value_template: '{{ is_state_attr(''media_player.home_theater_tv'', ''source'',
      ''Hulu'') }}'
  - entity_id: sensor.harmony_hub
    platform: state
    to: Watch a Movie
  condition:
  - condition: state
    entity_id: light.home_theater_west_dimmer
    state: 'on'
  action:
  - data:
      brightness_pct: 5
      transition: 3
    entity_id: light.home_theater_west_dimmer
    service: light.turn_on
  mode: single
- id: change_light_color_for_watching_tv
  alias: Dim basement lights for watching TV
  trigger:
  - entity_id: media_player.home_theater_tv
    from: 'off'
    platform: state
  condition:
  - condition: state
    entity_id: light.basement_rgbw_controller_main
    state: 'on'
  action:
  - entity_id: light.basement_rgbw_controller_red
    service: light.turn_off
  - entity_id: light.basement_rgbw_controller_green
    service: light.turn_off
  - entity_id: light.basement_rgbw_controller_blue
    service: light.turn_off
  - data:
      brightness_pct: 10
      transition: 5
    entity_id: light.basement_rgbw_controller_white
    service: light.turn_on
  mode: single
- id: brighten_lights_when_done_watching_tv
  alias: Brighten home theater lights when done watching TV
  trigger:
  - entity_id: media_player.home_theater_tv
    platform: state
    to: 'off'
  condition:
    condition: state
    entity_id: light.home_theater_west_dimmer
    state: 'on'
  action:
    service: light.turn_on
    entity_id: light.home_theater_west_dimmer
    data:
      brightness_pct: 100
      transition: 3
- id: change_light_color_when_done_watching_tv
  alias: Change light color when done watching TV
  trigger:
    platform: state
    entity_id: media_player.home_theater_tv
    to: 'off'
  condition:
    condition: state
    entity_id: light.basement_rgbw_controller_main
    state: 'on'
  action:
    service: light.turn_on
    entity_id: light.basement_rgbw_controller_main
    data:
      rgb_color:
      - 255
      - 255
      - 255
      transition: 5
      white_value: 255
- id: turn_off_home_theater_lights_if_basement_lights_turn_off
  alias: Turn off home theater lights if basement lights turn off
  trigger:
    platform: state
    entity_id: light.basement_rgbw_controller_main
    to: 'off'
    for:
      seconds: 5
  condition:
    condition: state
    entity_id: light.home_theater_west_dimmer
    state: 'on'
  action:
    service: light.turn_off
    entity_id: light.home_theater_west_dimmer
- id: notify_when_garage_is_open_for_too_long
  alias: Notify when garage is open for too long
  trigger:
    platform: state
    entity_id: sensor.garage_door
    to: Open
    for:
      hours: 1
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.garage
      filename: /tmp/garage
  - service: notify.pushover
    data_template:
      message: The garage door has been open longer than an hour
    data:
      title: Garage Door Open
      data:
        sound: gamelan
        attachment: /tmp/garage
- id: notify_when_tv_has_been_on_for_too_long
  alias: Notify when TV has been on for too long
  trigger:
  - entity_id: media_player.home_theater_tv
    for: '3:00:00'
    platform: state
    to: 'on'
  action:
  - data:
      data:
        sound: gamelan
      title: TV is On
    data_template:
      message: The TV has been on for longer than 3 hours
    service: notify.pushover
- id: notify_when_doorbell_is_rung
  alias: Notify when the doorbell is rung
  trigger:
  - entity_id: binary_sensor.doorbell_button
    platform: state
    to: 'on'
  action:
  - data:
      entity_id: camera.front_door
      filename: /tmp/doorbell
    service: camera.snapshot
  - data:
      data:
        attachment: /tmp/doorbell
        sound: bugle
      message: The doorbell has been rung
      title: Doorbell
    service: notify.pushover
  - data:
      data:
        attachment: /tmp/doorbell
      message: The doorbell has been rung
    service: notify.home_theater_tv
- id: change_printer_lights_when_printer_is_done_printing
  alias: Change printer lights when printer is done printing
  trigger:
  - entity_id: binary_sensor.octoprint_printing
    platform: state
    to: 'off'
  action:
  - data:
      white_value: 0
    entity_id: light.3d_printer_lights
    service: light.turn_on
  - delay: 00:00:03
  - data:
      effect: colorloop
    entity_id: light.3d_printer_lights
    service: light.turn_on
  - delay: 00:10:00
  - condition: state
    entity_id: binary_sensor.octoprint_printing
    state: 'off'
  - data: {}
    entity_id: light.3d_printer_lights
    service: light.turn_off
  mode: single
- id: turn_3d_printer_light_to_white_when_printing
  alias: Turn 3D printer light to white when printing
  trigger:
  - entity_id: binary_sensor.octoprint_printing
    platform: state
    to: 'on'
  action:
  - data:
      white_value: 255
    entity_id: light.3d_printer_lights
    service: light.turn_on
  - data:
      rgb_color:
      - 255
      - 255
      - 255
    entity_id: light.3d_printer_lights
    service: light.turn_on
  mode: single
- id: turn_garage_interior_lights_on_when_garage_door_opens
  alias: Turn garage interior lights on when garage door opens
  trigger:
  - entity_id: sensor.garage_door
    platform: state
    to: Open
  condition:
  - condition: template
    value_template: '{{ states.sun.sun.attributes.elevation < 0 }}'
  action:
  - service: switch.turn_on
    entity_id: switch.garage_interior_lights
- id: turn_garage_interior_lights_off_when_garage_door_closes
  alias: Turn garage interior lights off when garage door closes
  trigger:
  - entity_id: sensor.garage_door
    platform: state
    to: Closed
  action:
    service: switch.turn_off
    entity_id: switch.garage_interior_lights
- id: '1566659647483'
  alias: Turn garage interior lights on if door open and sunset
  trigger:
  - event: sunset
    platform: sun
  condition:
  - condition: state
    entity_id: sensor.garage_door
    state: Open
  action:
  - data:
      entity_id: switch.garage_interior_lights
    service: switch.turn_on
  mode: single
- id: '1577139638962'
  alias: Notify when doorbell leaves the network
  description: ''
  trigger:
  - entity_id: device_tracker.doorbell
    from: home
    platform: state
  condition: []
  action:
  - data:
      message: Check if it has lost power or needs reset
      title: Doorbell left the network
    service: notify.pushover
- id: '1577140055130'
  alias: Notify when Hyperion has left the network
  description: ''
  trigger:
  - entity_id: device_tracker.hyperion
    from: home
    platform: state
  condition: []
  action:
  - data:
      message: The Pi may need rebooted. Nginx is down.
      title: Hyperion has left the network
    service: notify.pushover
- id: '1588540340794'
  alias: Set input boolean when home theater is on
  description: ''
  trigger:
  - entity_id: sensor.harmony_hub
    from: PowerOff
    platform: state
  condition: []
  action:
  - entity_id: input_boolean.home_theater_on
    service: input_boolean.turn_on
- id: '1588540420902'
  alias: Set input boolean when home theater is off
  description: ''
  trigger:
  - entity_id: sensor.harmony_hub
    platform: state
    to: PowerOff
  condition: []
  action:
  - entity_id: input_boolean.home_theater_on
    service: input_boolean.turn_off
- id: '1590692559020'
  alias: Notify when wind is over 20mph
  description: ''
  trigger:
  - above: '20'
    entity_id: sensor.outside_wind_speed
    platform: numeric_state
  condition: []
  action:
  - data_template:
      message: Wind is gusting over 20mph; currently {{ trigger.to_state.state }}mph
      title: High winds at home
    service: notify.pushover
  mode: single
- id: '1591753850917'
  alias: Notify when the weather station battery is low
  description: ''
  trigger:
  - entity_id: sensor.outdoor_battery_ok
    from: '1'
    platform: state
    to: '0'
  condition: []
  action:
  - data_template:
      message: Temperature sensor "{{ trigger.to_state.name }}" has a low battery
      title: Temp Sensor Battery Low
    service: notify.pushover
  mode: single
- id: '1596808784045'
  alias: Notify when master bedroom sensor battery is low
  description: ''
  trigger:
  - entity_id: sensor.master_bedroom_battery_ok
    from: '1'
    platform: state
    to: '0'
  - entity_id: sensor.east_bedroom_battery_ok
    from: '1'
    platform: state
    to: '0'
  - entity_id: sensor.west_bedroom_battery_ok
    from: '1'
    platform: state
    to: '0'
  - entity_id: sensor.north_bedroom_battery_ok
    from: '1'
    platform: state
    to: '0'
  condition: []
  action:
  - data:
      message: The master bedroom sensor battery is low.
      title: Temperature Sensor Battery
    service: notify.pushover
  mode: single
- id: '1599055993244'
  alias: Turn off chromecast when TV turns off
  description: ''
  trigger:
  - entity_id: media_player.home_theater_tv
    for: 5s
    platform: state
    to: 'off'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: media_player.chromecastultra9136
      state: 'off'
  action:
  - data: {}
    entity_id: media_player.chromecastultra9136
    service: media_player.turn_off
  mode: single
